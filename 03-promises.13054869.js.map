{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAjCA,CACXQ,OAAQC,SAASC,cAAc,mBAC/BC,KAAMF,SAASC,cAAc,WAG1BC,KAAKC,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOP,SAASC,cAAc,kBAAkBO,OAC5D,MAAMC,EAAOF,OAAOP,SAASC,cAAc,iBAAiBO,OACtDE,EAASH,OAAOP,SAASC,cAAc,mBAAmBO,OAChE,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCtB,EAAcsB,EAAGL,GACdM,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOC,QAAQ,sBAAsBxB,QAAeC,MAAU,IAE/DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOG,QAAQ,qBAAqB1B,QAAeC,MAAU,IAEjEe,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  button: document.querySelector('[type=\"submit\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handlerValue);\n\nfunction handlerValue(e) {\n  e.preventDefault();\n  let delay = Number(document.querySelector('[name=\"delay\"]').value);\n  const step = Number(document.querySelector('[name=\"step\"]').value);\n  const amount = Number(document.querySelector('[name=\"amount\"]').value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// ✅ ❌\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","button","document","querySelector","form","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.13054869.js.map"}