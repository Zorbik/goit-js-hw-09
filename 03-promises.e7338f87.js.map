{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,I,IAAcC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAYA,UAAA,GAAD,EAAGE,EAAAF,UAAAC,OAAA,YAAAD,UAAA,GAASA,UAAA,GAAD,EAC3C,OAAO,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEL,WAAUG,UAEpBG,EAAO,CAAEN,WAAUG,S,GAEpBA,E,KAhCM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAIF,IAHA,IAAIC,EAAQC,OAAOH,EAAEI,OAAOhB,MAAMiB,OAC5BC,EAAOH,OAAOH,EAAEI,OAAOE,KAAKD,OAC5BE,EAASJ,OAAOH,EAAEI,OAAOG,OAAOF,OAC7BG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCxB,EAAcwB,EAAGN,GACdO,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUG,EAAKsB,EAALtB,MACjBN,EAAA6B,OAAOC,QAAQ,sBAAqCC,OAAf5B,EAAS,QAAY4B,OAANzB,EAAM,M,IAE3D0B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUG,EAAKsB,EAALtB,MAClBN,EAAA6B,OAAOI,QAAQ,qBAAoCF,OAAf5B,EAAS,QAAY4B,OAANzB,EAAM,M,IAE7Dc,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handlerValue);\n\nfunction handlerValue(e) {\n  e.preventDefault();\n  let delay = Number(e.target.delay.value);\n  const step = Number(e.target.step.value);\n  const amount = Number(e.target.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position = 0, delay = 0) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","arguments","length","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e7338f87.js.map"}